{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit|NotebookEdit|mcp__language-server__edit_file|mcp__language-server__rename_symbol|Bash",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/format.sh",
            "blocking": true
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "condition": "path matches '*.rs'",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/rust-check.sh",
            "blocking": true
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "condition": "path matches '*test*.rs' or path matches 'tests/'",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/rust-test.sh",
            "blocking": true
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "condition": "path matches '*.rs'",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/rust-clippy.sh",
            "blocking": true
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "condition": "path matches 'src/lib.rs' or path matches 'src/main.rs'",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/cargo-doc.sh",
            "blocking": true
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "condition": "path matches 'Cargo.toml'",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/cargo-tree.sh",
            "blocking": true
          },
          {
            "type": "command",
            "command": ".claude/hooks/cargo-doc.sh",
            "blocking": true
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/notification-hook.sh",
            "blocking": true
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      "Read(/home/giodamelio/projects/lilvault/*)",
      "Write(/home/giodamelio/projects/lilvault/*)",
      "Edit(/home/giodamelio/projects/lilvault/*)",
      "MultiEdit(/home/giodamelio/projects/lilvault/*)",
      "mcp__language-server__*(/home/giodamelio/projects/lilvault/*)",
      "mcp__language-server__references",
      "mcp__language-server__edit_file",
      "Bash(ls:*)",
      "Bash(cargo build*)",
      "Bash(cargo check*)",
      "Bash(cargo test*)",
      "Bash(cargo clippy*)",
      "Bash(cargo doc*)",
      "Bash(cargo run*)",
      "Bash(cargo tree*)",
      "Bash(cargo fmt*)",
      "Bash(cargo:*)",
      "Bash(git status*)",
      "Bash(git log*)",
      "Bash(git diff*)",
      "Bash(git show*)",
      "Bash(git add *)",
      "Bash(git commit*)",
      "Bash(git reset*)",
      "Bash(ls *)",
      "Bash(mkdir *)",
      "Bash(rm /home/giodamelio/projects/lilvault/*)",
      "Bash(mv /home/giodamelio/projects/lilvault/* /home/giodamelio/projects/lilvault/*)",
      "Bash(cp * /home/giodamelio/projects/lilvault/*)",
      "Bash(chmod * /home/giodamelio/projects/lilvault/*)",
      "Bash(echo *)",
      "Bash(cat *)",
      "Bash(which *)",
      "Bash(type *)",
      "Bash(find*)",
      "Bash(notify-send*)",
      "Bash(treefmt*)",
      "Bash(nix fmt*)",
      "Bash(nix build*)",
      "Bash(.claude/hooks/*.sh)",
      "Bash(sqlx*)",
      "Bash(DATABASE_URL=\"sqlite:vault.db\" cargo sqlx prepare)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__sequential-thinking__sequentialthinking"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "language-server",
    "memory",
    "sequential-thinking"
  ]
}
